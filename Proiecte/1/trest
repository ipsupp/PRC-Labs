import threading
import socket

def server():
    serv = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    serv.bind(('localhost', 57777))
    serv.listen(2)
    client_socket, client_adress = serv.accept()
    client_socket.send(f"received?".encode()) // trimiti mesa
    data = client_socket.recv(2048)
    answer = data.decode()          //primesti
    if answer == "received":
        print("received.")
    else:
        print("failed.")
    client_socket.close()
    serv.close()

def client():
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect(('localhost', 57777))
    data = client_socket.recv(2048)
    mesaj = data.decode()
    print("serverul transmite: " + mesaj)
    client_socket.send("received".encode())
    client_socket.close()

server_thr = threading.Thread(target=server)
client_thr = threading.Thread(target=client)

server_thr.start()
client_thr.start()

server_thr.join()
client_thr.join()
#caz urgenta

import threading
import socket
def server():
    serv = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    serv.bind(('localhost', 57777))
    serv.listen(2)
    client_socket, client_adress = serv.accept() # Ne-am conectat la client
    mesaj = "Buna ziua! Aveti o urgenta medicala?"
    print (f'Robot: ' + mesaj)
    client_socket.send(mesaj.encode()) # Am trimis clientului primul mesaj
    data = client_socket.recv(2048)
    answer = data.decode() # Primim raspuns de la client
    if answer == "Da":
        print (f'Pacient: ' + answer)
        mesaj = "Numarul dvs. de telefon a salvat. " \
                "O sa va contacteze un operator cat de devreme posibil."
        print (f'Server: ' + mesaj)
        client_socket.send(mesaj.encode())
        print (f'Conexiune inchisa.')
        client_socket.close() # Serverul inchide conexiunea cu clientul
        serv.close() # Serverul se inchide
def client():
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect(('localhost', 57777))
    data = client_socket.recv(2048)
    mesaj = data.decode() # Clientul a primit mesajul de la server
    client_socket.send("Da".encode())
    client_socket.close() # Clientul inchide conexiunea
server_thr = threading.Thread(target=server)
client_thr = threading.Thread(target=client)
server_thr.start()
client_thr.start()
server_thr.join()
client_thr.join()

